pipeline {

   agent any	
   stages {
        stage('Initialize'){
            steps {		    
                    nodejs('DAG_NodeJS'){
                          sh 'npm install'
                          sh 'cp  index.d.ts ./node_modules/@types/chart.js'
                    }
            }
        }
       stage('Build') {
            steps {
                    nodejs('DAG_NodeJS'){
                        sh 'npm run-script build'
                    }
            }
        } 
        
      /* 
	  stage ("Code Analysis") {	   
            steps {	
		               script{
			                     def scannerHome = tool 'DAG_SonarQubeScanner'
	                 withSonarQubeEnv('DAG_Sonar') {    
	                       sh "cp sonar-scanner.properties ${scannerHome}/conf"
		                   sh "${scannerHome}/bin/sonar-scanner"	            		   
		               }
		               }
            }
        } 
        */
        
	      stage("Quality Check"){
            steps{
	                script{
      			               def qualitygate = waitForQualityGate()
      			               if (qualitygate.status != "OK") {
         		                   error "Pipeline aborted due to quality gate coverage failure: ${qualitygate.status}"
			                     }
	     	          }
            }
        } 
    }
    post {
          always {
	          cleanWs() 
		   /*emailext body:'''${DEFAULT_CONTENT}''',
                            recipientProviders: [[$class: 'DevelopersRecipientProvider'], [$class: 'RequesterRecipientProvider']],
                            subject:''' ${DEFAULT_SUBJECT}'''*/
         }  
    }
}
